services:
  traefik:
    image: traefik:v3.0
    container_name: '${PREFIX}_traefik'
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Dashboard de Traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik:/etc/traefik
      - ./certs:/certs
    command:
      - --configFile=/etc/traefik/traefik.yml
    networks:
      - custom_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik-sibne.tchile.com`)"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.dashboard.service=api@internal"

  db:
    image: postgres:17
    restart: always
    container_name: '${PREFIX}_db'
    ports:
      - '5432:5432'
    volumes:
      - ../db/postgres:/var/lib/postgresql/data
      - ../db/init.sh:/docker-entrypoint-initdb.d/init.sh
    env_file:
      - .env
    networks:
      - custom_network
    shm_size: '128mb'
    environment:
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      POSTGRES_DB: '${POSTGRES_DB}'
      DB_USER: '${DB_USER}'
      DB_PASSWORD: '${DB_PASSWORD}'
      DB_NAME: '${DB_NAME}'

  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: '${PREFIX}_app'
    restart: always
    volumes:
      - ./src:/app/src
      - ./prisma:/app/prisma
      - ./test:/app/test
      - ./scripts:/app/scripts
      - ./tsconfig.json:/app/tsconfig.json
      - ./tsconfig.build.json:/app/tsconfig.build.json
      - ./nest-cli.json:/app/nest-cli.json
      - /app/node_modules
    env_file:
      - .env
    environment:
      DATABASE_URL: 'postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}?schema=dbo'
      NODE_ENV: '${NODE_ENV}'
      PORT: 3000
      JWT_SECRET: '${JWT_SECRET}'
    depends_on:
      - db
      - traefik
    networks:
      - custom_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api-sibne.tchile.com`)"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
      - "traefik.http.services.api.loadbalancer.server.port=3000"
    command: sh -c "npx prisma migrate deploy && npx prisma generate && npm run start:dev"

networks:
  custom_network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.1.0/24

volumes:
  postgres:
