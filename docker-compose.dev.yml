services:
  db:
    image: postgres:17
    restart: always
    container_name: '${PREFIX}_db_dev'
    ports:
      - '5432:5432'
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - dev_network
    shm_size: '128mb'
    environment:
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      POSTGRES_DB: '${POSTGRES_DB}'
      DB_USER: '${DB_USER}'
      DB_PASSWORD: '${DB_PASSWORD}'
      DB_NAME: '${DB_NAME}'

  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: '${PREFIX}_app_dev'
    restart: always
    ports:
      - '${PORT}:3000'
    volumes:
      - ./src:/app/src
      - ./prisma:/app/prisma
      - ./test:/app/test
      - ./scripts:/app/scripts
      - ./tsconfig.json:/app/tsconfig.json
      - ./tsconfig.build.json:/app/tsconfig.build.json
      - ./nest-cli.json:/app/nest-cli.json
      - /app/node_modules
    env_file:
      - .env
    environment:
      DATABASE_URL: 'postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}?schema=dbo'
      NODE_ENV: 'development'
      PORT: 3000
      JWT_SECRET: '${JWT_SECRET}'
    depends_on:
      - db
    networks:
      - dev_network
    command: sh -c "npx prisma migrate deploy && npx prisma generate && npm run start:dev"

networks:
  dev_network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.2.0/24

volumes:
  postgres_dev_data: